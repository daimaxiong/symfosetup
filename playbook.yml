---
- name: Playbook
  vars_files:
    - ./vars_file.yaml
  hosts: all
  become: true
  tasks:
    - name: 'Ensure apache giid is set to custom value'
      group:
        name: 'apache'
        state: present
        gid: 69
    - name: 'Ensure apache uid is set to custom value'
      user:
        name: 'apache'
        state: present
        group: 'apache'
        uid: 69
    - name: 'upgrade'
      dnf:
        name: '*'
        state: latest
      tags:
        - 'system upgrade'

    - name: 'Stop firewall'
      systemd:
        name: firewalld
        state: stopped
        enabled: no
      tags:
        - 'firewalld'

    - name: 'Configure Selinux'
      selinux:
        policy: 'targeted'
        state: 'permissive'
      tags:
        - 'selinux'

    - name: 'Install Git'
      dnf:
        name: git
        state: present
      tags:
        - 'utilities'

    - name: 'Install vim'
      dnf:
        name: 'vim'
        state: present
      tags:
        - 'utilities'

    - name: 'Install Apache'
      dnf:
        name: 'httpd'
        state: present
      tags:
        - 'apache'

    - name: 'Install Apache Extra Mods'
      dnf:
        name: 'mod_{{ item }}'
        state: present
      loop: '{{ apache.extra_mods }}'
      tags:
        - 'apache'

    - name: 'Enable Apache'
      systemd:
        name: 'httpd'
        state: started
        enabled: true
      tags:
        - 'apache'

    - name: 'Permissions for docroot'
      file:
        path: '{{ apache.document_root_base_dir }}'
        owner: 'apache'
        group: 'apache'
        mode: '0775'
      tags:
        - 'apache'

    - name: 'Add remote user to apache group for convenience'
      user:
        name: '{{ remote_user }}'
        groups: 'apache'
        append: yes
      tags:
        - 'apache'

    - name: 'Add apache to remote user group for convenience'
      user:
        name: 'apache'
        groups: '{{ remote_user }}'
        append: yes
      tags:
        - 'apache'

    - name: 'Get extra repos'
      dnf:
        name: '{{ item }}'
        disable_gpg_check: true
        state: present
      loop: '{{ repos }}'
      tags:
        - 'repos'

    - name: 'Install PHP 8.1 using remi repo'
      dnf:
        name: '@php:remi-8.1'
        state: present
      tags:
        - 'php'

    - name: 'Install PHP extensions'
      dnf:
        name: '{{ item }}'
        state: present
      loop: '{{ php.extensions }}'
      tags:
        - 'php'

    - name: 'Install PHP FPM'
      dnf:
        name: 'php-fpm'
        state: present
      tags:
        - 'php'
        - 'php_fpm'

    - name: 'Enable PHP-fpm'
      systemd:
        name: 'php-fpm'
        state: started
        enabled: true
      tags:
        - 'php'

    - name: 'Install wget'
      dnf:
        name: 'wget'
        state: present
      tags:
        - 'composer'

    - name: 'Install composer - requirements'
      dnf:
        name:
          - zip
          - unzip
        disable_gpg_check: yes
        state: present
      tags:
        - 'composer'

    - name: 'upload install script'
      template:
        src: 'composer_install.sh.j2'
        dest: '/home/{{ remote_user }}/composer_install.sh'
        owner: 'root'
        group: 'root'
        mode: '0750'
        force: yes
      tags:
        - 'composer'
        -
    - name: 'Install composer'
      command:
        chdir: '/home/{{ remote_user }}'
        cmd: 'sh composer_install.sh'
      tags:
        - 'composer'

    - name: 'make composer globally available as composer'
      raw: mv "/usr/bin/composer.phar" /usr/bin/composer
      tags:
        - 'composer'

    - name: 'Download symfony cli rpm installer script'
      get_url:
        url: 'https://dl.cloudsmith.io/public/symfony/stable/setup.rpm.sh'
        dest: '/home/{{ remote_user }}/symfony_setup.rpm.sh'
        mode: '0750'
      tags:
        - 'symfony'

    - name: 'Install symfony cli repo'
      command:
        chdir: '/home/{{ remote_user }}'
        cmd: 'sh symfony_setup.rpm.sh'
      tags:
        - 'symfony'

    - name: 'Install symfony cli'
      dnf:
        name: 'symfony-cli'
        state: present
      tags:
        - 'symfony'
        -
    - name: 'Ensure app log dir exists'
      file:
        path: '{{ apache.log_dir}}/{{ app_name }}'
        state: directory
        mode: '0755'
        owner: 'apache'
        group: 'apache'
      tags:
        - 'vhost'
        -
    - name: 'Vhost configuration file'
      template:
        src: 'vhost.conf.j2'
        dest: '{{ apache.server_root }}/{{ apache.vhost_conf_dir }}/vhost.conf'
        owner: 'root'
        group: 'root'
        mode: '0644'
        force: yes
      tags:
        - 'vhost'
        - 'new'